{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Development/file-sharing/src/features/auth/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from './authSlice'; // Import the login thunk\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null); // State to hold error message\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const credentials = {\n      email,\n      password\n    };\n    try {\n      // Dispatch login thunk\n      const resultAction = await dispatch(login(credentials));\n      if (login.fulfilled.match(resultAction)) {\n        // If OTP is required, the backend response will contain a message\n        if (resultAction.payload.message === 'OTP has been sent to your email.') {\n          // Navigate to OTP page if OTP is sent\n          navigate('/otp', {\n            state: {\n              email\n            }\n          });\n        } else {\n          // Handle unexpected responses here, if necessary\n          setErrorMessage('Unexpected response from the server.');\n        }\n      } else {\n        // If login failed\n        setErrorMessage(resultAction.error.message || 'Login failed');\n      }\n    } catch (error) {\n      // Handle any other errors, such as network issues\n      setErrorMessage(error.message || 'An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"w-full max-w-md bg-white shadow-md rounded-lg p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-700 mb-6 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 mb-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"block text-gray-600 font-medium mb-2\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          className: \"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:ring-blue-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"block text-gray-600 font-medium mb-2\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:ring-blue-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"uajFkc52xFiOj2vRFj8jyppIJBE=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useDispatch","login","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","dispatch","navigate","handleLogin","e","preventDefault","credentials","resultAction","fulfilled","match","payload","message","state","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/prashant/Development/file-sharing/src/features/auth/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from './authSlice'; // Import the login thunk\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null); // State to hold error message\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const credentials = { email, password };\n\n    try {\n      // Dispatch login thunk\n      const resultAction = await dispatch(login(credentials));\n\n      if (login.fulfilled.match(resultAction)) {\n        // If OTP is required, the backend response will contain a message\n        if (resultAction.payload.message === 'OTP has been sent to your email.') {\n          // Navigate to OTP page if OTP is sent\n          navigate('/otp', {state: {email}});\n        } else {\n          // Handle unexpected responses here, if necessary\n          setErrorMessage('Unexpected response from the server.');\n        }\n      } else {\n        // If login failed\n        setErrorMessage(resultAction.error.message || 'Login failed');\n      }\n    } catch (error) {\n      // Handle any other errors, such as network issues\n      setErrorMessage(error.message || 'An error occurred');\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <form\n        onSubmit={handleLogin}\n        className=\"w-full max-w-md bg-white shadow-md rounded-lg p-8\"\n      >\n        <h2 className=\"text-2xl font-bold text-gray-700 mb-6 text-center\">Login</h2>\n\n        {/* Error message display */}\n        {errorMessage && (\n          <div className=\"text-red-500 mb-4 text-center\">\n            <p>{errorMessage}</p>\n          </div>\n        )}\n\n        <div className=\"mb-4\">\n          <label htmlFor=\"email\" className=\"block text-gray-600 font-medium mb-2\">\n            Email:\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            className=\"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:ring-blue-300\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label htmlFor=\"password\" className=\"block text-gray-600 font-medium mb-2\">\n            Password:\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className=\"w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:ring-blue-300\"\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
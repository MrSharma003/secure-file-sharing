{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_BASE = 'http://localhost:8000/api'; // Update with your backend URL\n\nexport const login = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  const response = await axios.post(`${API_BASE}/auth/login/`, credentials);\n  localStorage.setItem('accessToken', response.data.access);\n  return response.data;\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('accessToken');\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.access;\n      state.status = 'fulfilled';\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.status = 'idle';\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE","login","credentials","thunkAPI","response","post","localStorage","setItem","data","access","logout","removeItem","authSlice","name","initialState","user","token","status","error","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/Users/prashant/Development/file-sharing/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_BASE = 'http://localhost:8000/api'; // Update with your backend URL\n\nexport const login = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  const response = await axios.post(`${API_BASE}/auth/login/`, credentials);\n  localStorage.setItem('accessToken', response.data.access);\n  return response.data;\n});\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('accessToken');\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: { user: null, token: null, status: 'idle', error: null },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.fulfilled, (state, action) => {\n        state.user = action.payload.user;\n        state.token = action.payload.access;\n        state.status = 'fulfilled';\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null;\n        state.token = null;\n        state.status = 'idle';\n      });\n  },\n});\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;AAE9C,OAAO,MAAMC,KAAK,GAAGH,gBAAgB,CAAC,YAAY,EAAE,OAAOI,WAAW,EAAEC,QAAQ,KAAK;EACnF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,QAAQ,cAAc,EAAEE,WAAW,CAAC;EACzEI,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,QAAQ,CAACI,IAAI,CAACC,MAAM,CAAC;EACzD,OAAOL,QAAQ,CAACI,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAME,MAAM,GAAGZ,gBAAgB,CAAC,aAAa,EAAE,YAAY;EAChEQ,YAAY,CAACK,UAAU,CAAC,aAAa,CAAC;AACxC,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAK,CAAC;EACtEC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,KAAK,CAACsB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO,CAACX,IAAI;MAChCS,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACjB,MAAM;MACnCe,KAAK,CAACP,MAAM,GAAG,WAAW;IAC5B,CAAC,CAAC,CACDK,OAAO,CAACZ,MAAM,CAACa,SAAS,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACT,IAAI,GAAG,IAAI;MACjBS,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBQ,KAAK,CAACP,MAAM,GAAG,MAAM;IACvB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeL,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import CryptoJS from\"crypto-js\";const SECRET_KEY=\"12345678901234567890123456789012\";// Must match the encryption key\nconst IV=CryptoJS.enc.Utf8.parse(\"16bytesiv1234567\");// Same IV as used during encryption\nexport const decryptFile=encryptedData=>{try{console.log(\"Encrypted Data:\",encryptedData);// Decode the base64-encoded encrypted data\nconst encryptedBytes=CryptoJS.enc.Base64.parse(encryptedData);// Decrypt the data\nconst decrypted=CryptoJS.AES.decrypt({ciphertext:encryptedBytes},CryptoJS.enc.Utf8.parse(SECRET_KEY),{iv:IV,mode:CryptoJS.mode.CBC,padding:CryptoJS.pad.Pkcs7});// Convert decrypted bytes to UTF-8 string\nconst decryptedData=decrypted.toString(CryptoJS.enc.Utf8);console.log(decryptedData);if(!decryptedData){throw new Error(\"Decryption failed or produced empty result\");}return decryptedData;}catch(error){console.error(\"Decryption failed:\",error);return null;// Handle decryption errors\n}};// Fetch files list from the API\nexport const fetchFiles=createAsyncThunk('files/fetchFiles',async(_,_ref)=>{let{getState}=_ref;const token=getState().auth.token;const response=await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/auth/files/list\"),{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)// Add the Bearer token\n}});if(!response.ok){throw new Error('Failed to fetch files');}const data=await response.json();return data.files;});// Upload file to the server\nexport const uploadFile=createAsyncThunk('files/uploadFile',async(formData,_ref2)=>{let{getState}=_ref2;const token=getState().auth.token;const response=await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/auth/files/upload\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(token)},body:formData});if(!response.ok){throw new Error('File upload failed');}return response.json();});// Share file with a user\nexport const shareFile=createAsyncThunk('files/shareFile',async _ref3=>{let{fileId,data}=_ref3;const response=await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/auth/share/file/\").concat(fileId),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});return response.json();});// Generate a secure link for the file\nexport const generateSecureLink=createAsyncThunk('files/generateSecureLink',async(fileId,_ref4)=>{let{getState}=_ref4;const token=getState().auth.token;const response=await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/auth/share_files/generate_secure_link/\").concat(fileId,\"/\"),{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)}});if(!response.ok){throw new Error('Failed to generate secure link');}const data=await response.json();console.log(data);return data.link;});// Download a file\nexport const downloadFile=createAsyncThunk('files/downloadFile',async(fileId,_ref5)=>{let{getState}=_ref5;const token=getState().auth.token;const response=await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/auth/files/download/\").concat(fileId,\"/\"),{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)}});if(!response.ok){throw new Error('Failed to download the file');}// Assuming the response JSON contains `file_content` as hex string\nconst data=await response.json();const encryptedHex=data.file_content;console.log(\"file content\",data.file_content);try{const decryptedFile=decryptFile(encryptedHex);const blob=new Blob([decryptedFile],{type:'application/octet-stream'});// Trigger file download\nconst url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='decrypted_file.txt';// Replace with a dynamic file name if needed\ndocument.body.appendChild(a);a.click();a.remove();window.URL.revokeObjectURL(url);return fileId;// Optionally return the fileId to update state\n}catch(error){console.error('Decryption failed:',error);throw new Error('Failed to decrypt and download file.');}});const initialState={files:[],status:'idle',error:null,secureLink:null// New state to hold the generated secure link\n};const fileSlice=createSlice({name:'files',initialState,reducers:{},extraReducers:builder=>{builder.addCase(fetchFiles.pending,state=>{state.status='loading';}).addCase(fetchFiles.fulfilled,(state,action)=>{state.status='succeeded';state.files=action.payload;// Set the files to the fetched data\n}).addCase(fetchFiles.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;}).addCase(uploadFile.pending,state=>{state.status='loading';}).addCase(uploadFile.fulfilled,(state,action)=>{state.status='succeeded';state.files.push(action.payload);// Assuming the server returns the newly uploaded file\n}).addCase(uploadFile.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;}).addCase(shareFile.pending,state=>{state.status='loading';}).addCase(shareFile.fulfilled,(state,action)=>{state.status='succeeded';// handle the successful share action (e.g., update the file list)\n}).addCase(shareFile.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;}).addCase(generateSecureLink.pending,state=>{state.status='loading';}).addCase(generateSecureLink.fulfilled,(state,action)=>{state.status='succeeded';state.secureLink=\"http://127.0.0.1:8000/auth/share_files\"+action.payload;// Set the generated secure link\n}).addCase(generateSecureLink.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;}).addCase(downloadFile.pending,state=>{state.status='loading';}).addCase(downloadFile.fulfilled,state=>{state.status='succeeded';// Handle post-download logic if needed\n}).addCase(downloadFile.rejected,(state,action)=>{state.status='failed';state.error=action.error.message;});}});export default fileSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","CryptoJS","SECRET_KEY","IV","enc","Utf8","parse","decryptFile","encryptedData","console","log","encryptedBytes","Base64","decrypted","AES","decrypt","ciphertext","iv","mode","CBC","padding","pad","Pkcs7","decryptedData","toString","Error","error","fetchFiles","_","_ref","getState","token","auth","response","fetch","concat","process","env","REACT_APP_API_BASE_URL","method","headers","ok","data","json","files","uploadFile","formData","_ref2","body","shareFile","_ref3","fileId","JSON","stringify","generateSecureLink","_ref4","link","downloadFile","_ref5","encryptedHex","file_content","decryptedFile","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","revokeObjectURL","initialState","status","secureLink","fileSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","reducer"],"sources":["/Users/prashant/Development/file-sharing/src/features/files/fileSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport CryptoJS from \"crypto-js\";\n\n\nconst SECRET_KEY = \"12345678901234567890123456789012\"; // Must match the encryption key\nconst IV = CryptoJS.enc.Utf8.parse(\"16bytesiv1234567\"); // Same IV as used during encryption\n\nexport const decryptFile = (encryptedData) => {\n  try {\n    console.log(\"Encrypted Data:\", encryptedData);\n    // Decode the base64-encoded encrypted data\n    const encryptedBytes = CryptoJS.enc.Base64.parse(encryptedData);\n\n    // Decrypt the data\n    const decrypted = CryptoJS.AES.decrypt(\n      { ciphertext: encryptedBytes },\n      CryptoJS.enc.Utf8.parse(SECRET_KEY),\n      { iv: IV, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }\n    );\n\n    // Convert decrypted bytes to UTF-8 string\n    const decryptedData = decrypted.toString(CryptoJS.enc.Utf8);\n\n    console.log(decryptedData)\n\n    if (!decryptedData) {\n      throw new Error(\"Decryption failed or produced empty result\");\n    }\n\n    return decryptedData;\n  } catch (error) {\n    console.error(\"Decryption failed:\", error);\n    return null; // Handle decryption errors\n  }\n};\n\n\n// Fetch files list from the API\nexport const fetchFiles = createAsyncThunk(\n  'files/fetchFiles',\n  async (_, { getState }) => {\n    const token = getState().auth.token;\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/auth/files/list`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`, // Add the Bearer token\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch files');\n    }\n\n    const data = await response.json();\n    return data.files;\n  }\n);\n\n// Upload file to the server\nexport const uploadFile = createAsyncThunk(\n  'files/uploadFile',\n  async (formData, { getState }) => {\n    const token = getState().auth.token;\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/auth/files/upload`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error('File upload failed');\n    }\n\n    return response.json();\n  }\n);\n\n// Share file with a user\nexport const shareFile = createAsyncThunk(\n  'files/shareFile',\n  async ({ fileId, data }) => {\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/auth/share/file/${fileId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  }\n);\n\n// Generate a secure link for the file\nexport const generateSecureLink = createAsyncThunk(\n  'files/generateSecureLink',\n  async (fileId, { getState }) => {\n    const token = getState().auth.token;\n    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/auth/share_files/generate_secure_link/${fileId}/`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to generate secure link');\n    }\n\n    const data = await response.json();\n    console.log(data);\n    return data.link;\n  }\n);\n\n// Download a file\nexport const downloadFile = createAsyncThunk(\n    'files/downloadFile',\n    async (fileId, { getState }) => {\n      const token = getState().auth.token;\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/auth/files/download/${fileId}/`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to download the file');\n      }\n  \n      // Assuming the response JSON contains `file_content` as hex string\n      const data = await response.json();\n      const encryptedHex = data.file_content;\n      console.log(\"file content\", data.file_content);\n  \n      try {\n        const decryptedFile = decryptFile(encryptedHex);\n        const blob = new Blob([decryptedFile], { type: 'application/octet-stream' });\n  \n        // Trigger file download\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'decrypted_file.txt'; // Replace with a dynamic file name if needed\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n        window.URL.revokeObjectURL(url);\n  \n        return fileId; // Optionally return the fileId to update state\n      } catch (error) {\n        console.error('Decryption failed:', error);\n        throw new Error('Failed to decrypt and download file.');\n      }\n    }\n  );\n  \n\nconst initialState = {\n  files: [],\n  status: 'idle',\n  error: null,\n  secureLink: null, // New state to hold the generated secure link\n};\n\nconst fileSlice = createSlice({\n  name: 'files',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchFiles.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchFiles.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.files = action.payload; // Set the files to the fetched data\n      })\n      .addCase(fetchFiles.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(uploadFile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.files.push(action.payload); // Assuming the server returns the newly uploaded file\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(shareFile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(shareFile.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        // handle the successful share action (e.g., update the file list)\n      })\n      .addCase(shareFile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(generateSecureLink.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(generateSecureLink.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.secureLink = \"http://127.0.0.1:8000/auth/share_files\" +  action.payload; // Set the generated secure link\n      })\n      .addCase(generateSecureLink.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(downloadFile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(downloadFile.fulfilled, (state) => {\n        state.status = 'succeeded';\n        // Handle post-download logic if needed\n      })\n      .addCase(downloadFile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default fileSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
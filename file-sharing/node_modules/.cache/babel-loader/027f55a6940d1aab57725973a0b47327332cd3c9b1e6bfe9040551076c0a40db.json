{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fetch files list from the API\nexport const fetchFiles = createAsyncThunk('files/fetchFiles', async (_, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  const response = await fetch('http://localhost:8000/auth/files/list', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Add the Bearer token\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch files');\n  }\n  const data = await response.json();\n  return data.files;\n});\n\n// Upload file to the server\nexport const uploadFile = createAsyncThunk('files/uploadFile', async (formData, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  const response = await fetch('http://localhost:8000/auth/files/upload', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('File upload failed');\n  }\n  return response.json();\n});\n\n// Share file with a user\nexport const shareFile = createAsyncThunk('files/shareFile', async ({\n  fileId,\n  data\n}) => {\n  const response = await fetch(`http://localhost:8000/auth/share/file/${fileId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  return response.json();\n});\n\n// Generate a secure link for the file\nexport const generateSecureLink = createAsyncThunk('files/generateSecureLink', async (fileId, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  const response = await fetch(`http://localhost:8000/auth/share_files/generate_secure_link/${fileId}/`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to generate secure link');\n  }\n  const data = await response.json();\n  console.log(data);\n  return data.secureLink; // Assuming the API returns a `secureLink` field\n});\n\n// Download a file\nexport const downloadFile = createAsyncThunk('files/downloadFile', async (fileId, {\n  getState\n}) => {\n  const token = getState().auth.token;\n  const response = await fetch(`http://localhost:8000/auth/files/download/${fileId}/`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to download the file');\n  }\n  const blob = await response.blob(); // Convert response to a Blob for file download\n  console;\n  const url = window.URL.createObjectURL(blob);\n\n  // Trigger file download\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'file_name'; // Replace with a dynamic file name if needed\n  document.body.appendChild(a);\n  a.click();\n  a.remove();\n  window.URL.revokeObjectURL(url);\n  return fileId; // Optionally return the fileId to update state\n});\nconst initialState = {\n  files: [],\n  status: 'idle',\n  error: null,\n  secureLink: null // New state to hold the generated secure link\n};\nconst fileSlice = createSlice({\n  name: 'files',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchFiles.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchFiles.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.files = action.payload; // Set the files to the fetched data\n    }).addCase(fetchFiles.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(uploadFile.pending, state => {\n      state.status = 'loading';\n    }).addCase(uploadFile.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.files.push(action.payload); // Assuming the server returns the newly uploaded file\n    }).addCase(uploadFile.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(shareFile.pending, state => {\n      state.status = 'loading';\n    }).addCase(shareFile.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      // handle the successful share action (e.g., update the file list)\n    }).addCase(shareFile.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(generateSecureLink.pending, state => {\n      state.status = 'loading';\n    }).addCase(generateSecureLink.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.secureLink = action.payload; // Set the generated secure link\n    }).addCase(generateSecureLink.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(downloadFile.pending, state => {\n      state.status = 'loading';\n    }).addCase(downloadFile.fulfilled, state => {\n      state.status = 'succeeded';\n      // Handle post-download logic if needed\n    }).addCase(downloadFile.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default fileSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchFiles","_","getState","token","auth","response","fetch","method","headers","ok","Error","data","json","files","uploadFile","formData","body","shareFile","fileId","JSON","stringify","generateSecureLink","console","log","secureLink","downloadFile","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","revokeObjectURL","initialState","status","error","fileSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","reducer"],"sources":["/Users/prashant/Development/file-sharing/src/features/files/fileSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Fetch files list from the API\nexport const fetchFiles = createAsyncThunk(\n  'files/fetchFiles',\n  async (_, { getState }) => {\n    const token = getState().auth.token;\n    const response = await fetch('http://localhost:8000/auth/files/list', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`, // Add the Bearer token\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch files');\n    }\n\n    const data = await response.json();\n    return data.files;\n  }\n);\n\n// Upload file to the server\nexport const uploadFile = createAsyncThunk(\n  'files/uploadFile',\n  async (formData, { getState }) => {\n    const token = getState().auth.token;\n    const response = await fetch('http://localhost:8000/auth/files/upload', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error('File upload failed');\n    }\n\n    return response.json();\n  }\n);\n\n// Share file with a user\nexport const shareFile = createAsyncThunk(\n  'files/shareFile',\n  async ({ fileId, data }) => {\n    const response = await fetch(`http://localhost:8000/auth/share/file/${fileId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  }\n);\n\n// Generate a secure link for the file\nexport const generateSecureLink = createAsyncThunk(\n  'files/generateSecureLink',\n  async (fileId, { getState }) => {\n    const token = getState().auth.token;\n    const response = await fetch(`http://localhost:8000/auth/share_files/generate_secure_link/${fileId}/`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to generate secure link');\n    }\n\n    const data = await response.json();\n    console.log(data);\n    return data.secureLink; // Assuming the API returns a `secureLink` field\n  }\n);\n\n// Download a file\nexport const downloadFile = createAsyncThunk(\n  'files/downloadFile',\n  async (fileId, { getState }) => {\n    const token = getState().auth.token;\n    const response = await fetch(`http://localhost:8000/auth/files/download/${fileId}/`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to download the file');\n    }\n\n    const blob = await response.blob(); // Convert response to a Blob for file download\n    console\n    const url = window.URL.createObjectURL(blob);\n\n    // Trigger file download\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'file_name'; // Replace with a dynamic file name if needed\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    window.URL.revokeObjectURL(url);\n\n    return fileId; // Optionally return the fileId to update state\n  }\n);\n\nconst initialState = {\n  files: [],\n  status: 'idle',\n  error: null,\n  secureLink: null, // New state to hold the generated secure link\n};\n\nconst fileSlice = createSlice({\n  name: 'files',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchFiles.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchFiles.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.files = action.payload; // Set the files to the fetched data\n      })\n      .addCase(fetchFiles.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(uploadFile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.files.push(action.payload); // Assuming the server returns the newly uploaded file\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(shareFile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(shareFile.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        // handle the successful share action (e.g., update the file list)\n      })\n      .addCase(shareFile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(generateSecureLink.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(generateSecureLink.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.secureLink = action.payload; // Set the generated secure link\n      })\n      .addCase(generateSecureLink.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      .addCase(downloadFile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(downloadFile.fulfilled, (state) => {\n        state.status = 'succeeded';\n        // Handle post-download logic if needed\n      })\n      .addCase(downloadFile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default fileSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}